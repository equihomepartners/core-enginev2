# coding: utf-8

"""
    EQU IHOME SIM ENGINE API

    API for running home equity investment fund simulations

    The version of the OpenAPI document: 0.1.0
    Contact: info@equihome.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equihome_sim_sdk.models.tax_impact_analysis import TaxImpactAnalysis

class TestTaxImpactAnalysis(unittest.TestCase):
    """TaxImpactAnalysis unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaxImpactAnalysis:
        """Test TaxImpactAnalysis
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaxImpactAnalysis`
        """
        model = TaxImpactAnalysis()
        if include_optional:
            return TaxImpactAnalysis(
                pre_tax_cashflows = [
                    equihome_sim_sdk.models.tax_cashflow.TaxCashflow(
                        year = 56, 
                        net_cashflow = 1.337, 
                        tax_amount = 1.337, )
                    ],
                post_tax_cashflows = [
                    equihome_sim_sdk.models.tax_cashflow.TaxCashflow(
                        year = 56, 
                        net_cashflow = 1.337, 
                        tax_amount = 1.337, )
                    ],
                tax_metrics = equihome_sim_sdk.models.tax_metrics.TaxMetrics(
                    pre_tax_irr = 1.337, 
                    post_tax_irr = 1.337, 
                    pre_tax_npv = 1.337, 
                    post_tax_npv = 1.337, 
                    total_tax_amount = 1.337, 
                    effective_tax_rate = 1.337, )
            )
        else:
            return TaxImpactAnalysis(
                pre_tax_cashflows = [
                    equihome_sim_sdk.models.tax_cashflow.TaxCashflow(
                        year = 56, 
                        net_cashflow = 1.337, 
                        tax_amount = 1.337, )
                    ],
                post_tax_cashflows = [
                    equihome_sim_sdk.models.tax_cashflow.TaxCashflow(
                        year = 56, 
                        net_cashflow = 1.337, 
                        tax_amount = 1.337, )
                    ],
                tax_metrics = equihome_sim_sdk.models.tax_metrics.TaxMetrics(
                    pre_tax_irr = 1.337, 
                    post_tax_irr = 1.337, 
                    pre_tax_npv = 1.337, 
                    post_tax_npv = 1.337, 
                    total_tax_amount = 1.337, 
                    effective_tax_rate = 1.337, ),
        )
        """

    def testTaxImpactAnalysis(self):
        """Test TaxImpactAnalysis"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
