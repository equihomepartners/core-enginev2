# coding: utf-8

"""
    EQU IHOME SIM ENGINE API

    API for running home equity investment fund simulations

    The version of the OpenAPI document: 0.1.0
    Contact: info@equihome.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equihome_sim_sdk.models.cashflow_visualization import CashflowVisualization

class TestCashflowVisualization(unittest.TestCase):
    """CashflowVisualization unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CashflowVisualization:
        """Test CashflowVisualization
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CashflowVisualization`
        """
        model = CashflowVisualization()
        if include_optional:
            return CashflowVisualization(
                cashflow_waterfall_chart = [
                    equihome_sim_sdk.models.cashflow_waterfall_item.CashflowWaterfallItem(
                        category = '', 
                        amount = 1.337, )
                    ],
                cashflow_by_year_chart = [
                    equihome_sim_sdk.models.cashflow_by_year_item.CashflowByYearItem(
                        year = 56, 
                        inflows = 1.337, 
                        outflows = 1.337, 
                        net = 1.337, )
                    ],
                cumulative_cashflow_chart = [
                    equihome_sim_sdk.models.cumulative_cashflow_item.CumulativeCashflowItem(
                        year = 56, 
                        cumulative_cashflow = 1.337, )
                    ],
                cashflow_table = [
                    equihome_sim_sdk.models.cashflow_table_item.CashflowTableItem(
                        year = 56, 
                        capital_calls = 1.337, 
                        loan_investments = 1.337, 
                        origination_fees = 1.337, 
                        principal_repayments = 1.337, 
                        interest_income = 1.337, 
                        appreciation_share = 1.337, 
                        management_fees = 1.337, 
                        fund_expenses = 1.337, 
                        distributions = 1.337, 
                        net_cashflow = 1.337, 
                        cumulative_cashflow = 1.337, )
                    ],
                cashflow_heatmap = [
                    equihome_sim_sdk.models.cashflow_heatmap_item.CashflowHeatmapItem(
                        year = 56, 
                        month = 56, 
                        category = '', 
                        amount = 1.337, )
                    ],
                cashflow_sankey = equihome_sim_sdk.models.cashflow_sankey.CashflowSankey(
                    nodes = [
                        equihome_sim_sdk.models.sankey_node.SankeyNode(
                            id = '', 
                            name = '', )
                        ], 
                    links = [
                        equihome_sim_sdk.models.sankey_link.SankeyLink(
                            source = '', 
                            target = '', 
                            value = 1.337, )
                        ], ),
                scenario_comparison_chart = [
                    equihome_sim_sdk.models.scenario_comparison_item.ScenarioComparisonItem(
                        scenario = '', 
                        metric = '', 
                        value = 1.337, )
                    ]
            )
        else:
            return CashflowVisualization(
                cashflow_waterfall_chart = [
                    equihome_sim_sdk.models.cashflow_waterfall_item.CashflowWaterfallItem(
                        category = '', 
                        amount = 1.337, )
                    ],
                cashflow_by_year_chart = [
                    equihome_sim_sdk.models.cashflow_by_year_item.CashflowByYearItem(
                        year = 56, 
                        inflows = 1.337, 
                        outflows = 1.337, 
                        net = 1.337, )
                    ],
                cumulative_cashflow_chart = [
                    equihome_sim_sdk.models.cumulative_cashflow_item.CumulativeCashflowItem(
                        year = 56, 
                        cumulative_cashflow = 1.337, )
                    ],
                cashflow_table = [
                    equihome_sim_sdk.models.cashflow_table_item.CashflowTableItem(
                        year = 56, 
                        capital_calls = 1.337, 
                        loan_investments = 1.337, 
                        origination_fees = 1.337, 
                        principal_repayments = 1.337, 
                        interest_income = 1.337, 
                        appreciation_share = 1.337, 
                        management_fees = 1.337, 
                        fund_expenses = 1.337, 
                        distributions = 1.337, 
                        net_cashflow = 1.337, 
                        cumulative_cashflow = 1.337, )
                    ],
        )
        """

    def testCashflowVisualization(self):
        """Test CashflowVisualization"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
