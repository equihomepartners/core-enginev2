# coding: utf-8

"""
    EQU IHOME SIM ENGINE API

    API for running home equity investment fund simulations

    The version of the OpenAPI document: 0.1.0
    Contact: info@equihome.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equihome_sim_sdk.models.cashflow_calculation_request import CashflowCalculationRequest

class TestCashflowCalculationRequest(unittest.TestCase):
    """CashflowCalculationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CashflowCalculationRequest:
        """Test CashflowCalculationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CashflowCalculationRequest`
        """
        model = CashflowCalculationRequest()
        if include_optional:
            return CashflowCalculationRequest(
                simulation_id = '',
                time_granularity = 'daily',
                include_loan_level_cashflows = True,
                include_fund_level_cashflows = True,
                include_stakeholder_cashflows = True,
                simple_interest_rate = 1.337,
                origination_fee_rate = 1.337,
                appreciation_share_method = 'pro_rata_ltv',
                distribution_frequency = 'monthly',
                distribution_lag = 56,
                enable_parallel_processing = True,
                num_workers = 56,
                enable_scenario_analysis = True,
                scenarios = [
                    None
                    ],
                enable_sensitivity_analysis = True,
                sensitivity_parameters = [
                    None
                    ],
                enable_cashflow_metrics = True,
                discount_rate = 1.337,
                enable_tax_impact_analysis = True,
                tax_rates = {
                    'key' : 1.337
                    },
                enable_reinvestment_modeling = True,
                reinvestment_rate = 1.337,
                enable_liquidity_analysis = True,
                minimum_cash_reserve = 1.337,
                enable_export = True,
                export_formats = [
                    ''
                    ]
            )
        else:
            return CashflowCalculationRequest(
                simulation_id = '',
        )
        """

    def testCashflowCalculationRequest(self):
        """Test CashflowCalculationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
