# coding: utf-8

"""
    EQU IHOME SIM ENGINE API

    API for running home equity investment fund simulations

    The version of the OpenAPI document: 0.1.0
    Contact: info@equihome.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equihome_sim_sdk.models.reinvestment_summary_response import ReinvestmentSummaryResponse

class TestReinvestmentSummaryResponse(unittest.TestCase):
    """ReinvestmentSummaryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReinvestmentSummaryResponse:
        """Test ReinvestmentSummaryResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReinvestmentSummaryResponse`
        """
        model = ReinvestmentSummaryResponse()
        if include_optional:
            return ReinvestmentSummaryResponse(
                total_reinvested = 1.337,
                num_reinvestment_events = 56,
                avg_reinvestment_amount = 1.337,
                reinvestment_by_year = {
                    'key' : 1.337
                    },
                reinvestment_by_zone = {
                    'key' : 1.337
                    },
                reinvestment_by_strategy = {
                    'key' : 1.337
                    },
                reinvestment_by_source = {
                    'key' : 1.337
                    },
                reinvestment_efficiency = equihome_sim_sdk.models.reinvestment_efficiency_response.ReinvestmentEfficiencyResponse(
                    reinvestment_ratio = 1.337, 
                    avg_time_to_reinvest = 1.337, 
                    reinvestment_portfolio_impact = 1.337, ),
                reinvestment_performance = equihome_sim_sdk.models.reinvestment_performance_response.ReinvestmentPerformanceResponse(
                    roi = 1.337, 
                    avg_hold_period = 1.337, 
                    exit_type_distribution = {
                        'key' : 1.337
                        }, ),
                reinvestment_timing = {
                    'key' : {
                        'key' : 1.337
                        }
                    },
                cash_reserve_history = [
                    None
                    ],
                cash_reserve_metrics = equihome_sim_sdk.models.cash_reserve_metrics_response.CashReserveMetricsResponse(
                    avg_cash_reserve = 1.337, 
                    min_cash_reserve = 1.337, 
                    max_cash_reserve = 1.337, 
                    avg_cash_reserve_pct = 1.337, 
                    min_cash_reserve_pct = 1.337, 
                    max_cash_reserve_pct = 1.337, )
            )
        else:
            return ReinvestmentSummaryResponse(
                total_reinvested = 1.337,
                num_reinvestment_events = 56,
                avg_reinvestment_amount = 1.337,
                reinvestment_by_year = {
                    'key' : 1.337
                    },
                reinvestment_by_zone = {
                    'key' : 1.337
                    },
                reinvestment_by_strategy = {
                    'key' : 1.337
                    },
                reinvestment_by_source = {
                    'key' : 1.337
                    },
        )
        """

    def testReinvestmentSummaryResponse(self):
        """Test ReinvestmentSummaryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
