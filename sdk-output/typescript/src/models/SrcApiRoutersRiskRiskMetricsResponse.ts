/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConcentrationMetrics } from './ConcentrationMetrics';
import {
    ConcentrationMetricsFromJSON,
    ConcentrationMetricsFromJSONTyped,
    ConcentrationMetricsToJSON,
    ConcentrationMetricsToJSONTyped,
} from './ConcentrationMetrics';
import type { SrcApiRoutersRiskLiquidityMetrics } from './SrcApiRoutersRiskLiquidityMetrics';
import {
    SrcApiRoutersRiskLiquidityMetricsFromJSON,
    SrcApiRoutersRiskLiquidityMetricsFromJSONTyped,
    SrcApiRoutersRiskLiquidityMetricsToJSON,
    SrcApiRoutersRiskLiquidityMetricsToJSONTyped,
} from './SrcApiRoutersRiskLiquidityMetrics';
import type { RiskAdjustedReturnMetrics } from './RiskAdjustedReturnMetrics';
import {
    RiskAdjustedReturnMetricsFromJSON,
    RiskAdjustedReturnMetricsFromJSONTyped,
    RiskAdjustedReturnMetricsToJSON,
    RiskAdjustedReturnMetricsToJSONTyped,
} from './RiskAdjustedReturnMetrics';
import type { SrcApiRoutersRiskStressTestResult } from './SrcApiRoutersRiskStressTestResult';
import {
    SrcApiRoutersRiskStressTestResultFromJSON,
    SrcApiRoutersRiskStressTestResultFromJSONTyped,
    SrcApiRoutersRiskStressTestResultToJSON,
    SrcApiRoutersRiskStressTestResultToJSONTyped,
} from './SrcApiRoutersRiskStressTestResult';
import type { SrcApiRoutersRiskLeverageMetrics } from './SrcApiRoutersRiskLeverageMetrics';
import {
    SrcApiRoutersRiskLeverageMetricsFromJSON,
    SrcApiRoutersRiskLeverageMetricsFromJSONTyped,
    SrcApiRoutersRiskLeverageMetricsToJSON,
    SrcApiRoutersRiskLeverageMetricsToJSONTyped,
} from './SrcApiRoutersRiskLeverageMetrics';
import type { PerformanceMetrics } from './PerformanceMetrics';
import {
    PerformanceMetricsFromJSON,
    PerformanceMetricsFromJSONTyped,
    PerformanceMetricsToJSON,
    PerformanceMetricsToJSONTyped,
} from './PerformanceMetrics';
import type { RiskMetricsModel } from './RiskMetricsModel';
import {
    RiskMetricsModelFromJSON,
    RiskMetricsModelFromJSONTyped,
    RiskMetricsModelToJSON,
    RiskMetricsModelToJSONTyped,
} from './RiskMetricsModel';
import type { RiskVisualization } from './RiskVisualization';
import {
    RiskVisualizationFromJSON,
    RiskVisualizationFromJSONTyped,
    RiskVisualizationToJSON,
    RiskVisualizationToJSONTyped,
} from './RiskVisualization';
import type { CreditMetrics } from './CreditMetrics';
import {
    CreditMetricsFromJSON,
    CreditMetricsFromJSONTyped,
    CreditMetricsToJSON,
    CreditMetricsToJSONTyped,
} from './CreditMetrics';
import type { MarketPriceMetrics } from './MarketPriceMetrics';
import {
    MarketPriceMetricsFromJSON,
    MarketPriceMetricsFromJSONTyped,
    MarketPriceMetricsToJSON,
    MarketPriceMetricsToJSONTyped,
} from './MarketPriceMetrics';
import type { SensitivityResult } from './SensitivityResult';
import {
    SensitivityResultFromJSON,
    SensitivityResultFromJSONTyped,
    SensitivityResultToJSON,
    SensitivityResultToJSONTyped,
} from './SensitivityResult';
import type { MarketMetrics } from './MarketMetrics';
import {
    MarketMetricsFromJSON,
    MarketMetricsFromJSONTyped,
    MarketMetricsToJSON,
    MarketMetricsToJSONTyped,
} from './MarketMetrics';
import type { ReturnMetrics } from './ReturnMetrics';
import {
    ReturnMetricsFromJSON,
    ReturnMetricsFromJSONTyped,
    ReturnMetricsToJSON,
    ReturnMetricsToJSONTyped,
} from './ReturnMetrics';

/**
 * Response model for risk metrics calculation.
 * @export
 * @interface SrcApiRoutersRiskRiskMetricsResponse
 */
export interface SrcApiRoutersRiskRiskMetricsResponse {
    /**
     * Simulation ID
     * @type {string}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    simulationId: string;
    /**
     * Market/price metrics
     * @type {MarketPriceMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    marketPriceMetrics: MarketPriceMetrics;
    /**
     * Credit metrics
     * @type {CreditMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    creditMetrics: CreditMetrics;
    /**
     * Liquidity metrics
     * @type {SrcApiRoutersRiskLiquidityMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    liquidityMetrics: SrcApiRoutersRiskLiquidityMetrics;
    /**
     * Leverage metrics
     * @type {SrcApiRoutersRiskLeverageMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    leverageMetrics: SrcApiRoutersRiskLeverageMetrics;
    /**
     * Concentration metrics
     * @type {ConcentrationMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    concentrationMetrics: ConcentrationMetrics;
    /**
     * Performance/return-risk metrics
     * @type {PerformanceMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    performanceMetrics: PerformanceMetrics;
    /**
     * Return metrics
     * @type {ReturnMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    returnMetrics: ReturnMetrics;
    /**
     * Risk metrics
     * @type {RiskMetricsModel}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    riskMetrics: RiskMetricsModel;
    /**
     * Risk-adjusted return metrics
     * @type {RiskAdjustedReturnMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    riskAdjustedReturnMetrics: RiskAdjustedReturnMetrics;
    /**
     * Market metrics
     * @type {MarketMetrics}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    marketMetrics: MarketMetrics;
    /**
     * Stress test results
     * @type {{ [key: string]: SrcApiRoutersRiskStressTestResult; }}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    stressTestResults: { [key: string]: SrcApiRoutersRiskStressTestResult; };
    /**
     * Sensitivity analysis results
     * @type {{ [key: string]: Array<SensitivityResult>; }}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    sensitivityAnalysis: { [key: string]: Array<SensitivityResult>; };
    /**
     * Visualization data
     * @type {RiskVisualization}
     * @memberof SrcApiRoutersRiskRiskMetricsResponse
     */
    visualization: RiskVisualization;
}

/**
 * Check if a given object implements the SrcApiRoutersRiskRiskMetricsResponse interface.
 */
export function instanceOfSrcApiRoutersRiskRiskMetricsResponse(value: object): value is SrcApiRoutersRiskRiskMetricsResponse {
    if (!('simulationId' in value) || value['simulationId'] === undefined) return false;
    if (!('marketPriceMetrics' in value) || value['marketPriceMetrics'] === undefined) return false;
    if (!('creditMetrics' in value) || value['creditMetrics'] === undefined) return false;
    if (!('liquidityMetrics' in value) || value['liquidityMetrics'] === undefined) return false;
    if (!('leverageMetrics' in value) || value['leverageMetrics'] === undefined) return false;
    if (!('concentrationMetrics' in value) || value['concentrationMetrics'] === undefined) return false;
    if (!('performanceMetrics' in value) || value['performanceMetrics'] === undefined) return false;
    if (!('returnMetrics' in value) || value['returnMetrics'] === undefined) return false;
    if (!('riskMetrics' in value) || value['riskMetrics'] === undefined) return false;
    if (!('riskAdjustedReturnMetrics' in value) || value['riskAdjustedReturnMetrics'] === undefined) return false;
    if (!('marketMetrics' in value) || value['marketMetrics'] === undefined) return false;
    if (!('stressTestResults' in value) || value['stressTestResults'] === undefined) return false;
    if (!('sensitivityAnalysis' in value) || value['sensitivityAnalysis'] === undefined) return false;
    if (!('visualization' in value) || value['visualization'] === undefined) return false;
    return true;
}

export function SrcApiRoutersRiskRiskMetricsResponseFromJSON(json: any): SrcApiRoutersRiskRiskMetricsResponse {
    return SrcApiRoutersRiskRiskMetricsResponseFromJSONTyped(json, false);
}

export function SrcApiRoutersRiskRiskMetricsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SrcApiRoutersRiskRiskMetricsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'simulationId': json['simulation_id'],
        'marketPriceMetrics': MarketPriceMetricsFromJSON(json['market_price_metrics']),
        'creditMetrics': CreditMetricsFromJSON(json['credit_metrics']),
        'liquidityMetrics': SrcApiRoutersRiskLiquidityMetricsFromJSON(json['liquidity_metrics']),
        'leverageMetrics': SrcApiRoutersRiskLeverageMetricsFromJSON(json['leverage_metrics']),
        'concentrationMetrics': ConcentrationMetricsFromJSON(json['concentration_metrics']),
        'performanceMetrics': PerformanceMetricsFromJSON(json['performance_metrics']),
        'returnMetrics': ReturnMetricsFromJSON(json['return_metrics']),
        'riskMetrics': RiskMetricsModelFromJSON(json['risk_metrics']),
        'riskAdjustedReturnMetrics': RiskAdjustedReturnMetricsFromJSON(json['risk_adjusted_return_metrics']),
        'marketMetrics': MarketMetricsFromJSON(json['market_metrics']),
        'stressTestResults': (mapValues(json['stress_test_results'], SrcApiRoutersRiskStressTestResultFromJSON)),
        'sensitivityAnalysis': json['sensitivity_analysis'],
        'visualization': RiskVisualizationFromJSON(json['visualization']),
    };
}

export function SrcApiRoutersRiskRiskMetricsResponseToJSON(json: any): SrcApiRoutersRiskRiskMetricsResponse {
    return SrcApiRoutersRiskRiskMetricsResponseToJSONTyped(json, false);
}

export function SrcApiRoutersRiskRiskMetricsResponseToJSONTyped(value?: SrcApiRoutersRiskRiskMetricsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'simulation_id': value['simulationId'],
        'market_price_metrics': MarketPriceMetricsToJSON(value['marketPriceMetrics']),
        'credit_metrics': CreditMetricsToJSON(value['creditMetrics']),
        'liquidity_metrics': SrcApiRoutersRiskLiquidityMetricsToJSON(value['liquidityMetrics']),
        'leverage_metrics': SrcApiRoutersRiskLeverageMetricsToJSON(value['leverageMetrics']),
        'concentration_metrics': ConcentrationMetricsToJSON(value['concentrationMetrics']),
        'performance_metrics': PerformanceMetricsToJSON(value['performanceMetrics']),
        'return_metrics': ReturnMetricsToJSON(value['returnMetrics']),
        'risk_metrics': RiskMetricsModelToJSON(value['riskMetrics']),
        'risk_adjusted_return_metrics': RiskAdjustedReturnMetricsToJSON(value['riskAdjustedReturnMetrics']),
        'market_metrics': MarketMetricsToJSON(value['marketMetrics']),
        'stress_test_results': (mapValues(value['stressTestResults'], SrcApiRoutersRiskStressTestResultToJSON)),
        'sensitivity_analysis': value['sensitivityAnalysis'],
        'visualization': RiskVisualizationToJSON(value['visualization']),
    };
}

