/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Suburb summary model.
 * @export
 * @interface SuburbSummary
 */
export interface SuburbSummary {
    /**
     * Suburb ID
     * @type {string}
     * @memberof SuburbSummary
     */
    suburbId: string;
    /**
     * Suburb name
     * @type {string}
     * @memberof SuburbSummary
     */
    name: string;
    /**
     * State
     * @type {string}
     * @memberof SuburbSummary
     */
    state: string;
    /**
     * Postcode
     * @type {string}
     * @memberof SuburbSummary
     */
    postcode: string;
    /**
     * Latitude
     * @type {number}
     * @memberof SuburbSummary
     */
    latitude: number;
    /**
     * Longitude
     * @type {number}
     * @memberof SuburbSummary
     */
    longitude: number;
    /**
     * Zone category (green, orange, red)
     * @type {string}
     * @memberof SuburbSummary
     */
    zoneCategory: string;
    /**
     * Overall score (0-100)
     * @type {number}
     * @memberof SuburbSummary
     */
    overallScore: number;
}

/**
 * Check if a given object implements the SuburbSummary interface.
 */
export function instanceOfSuburbSummary(value: object): value is SuburbSummary {
    if (!('suburbId' in value) || value['suburbId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('postcode' in value) || value['postcode'] === undefined) return false;
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('zoneCategory' in value) || value['zoneCategory'] === undefined) return false;
    if (!('overallScore' in value) || value['overallScore'] === undefined) return false;
    return true;
}

export function SuburbSummaryFromJSON(json: any): SuburbSummary {
    return SuburbSummaryFromJSONTyped(json, false);
}

export function SuburbSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuburbSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'suburbId': json['suburb_id'],
        'name': json['name'],
        'state': json['state'],
        'postcode': json['postcode'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'zoneCategory': json['zone_category'],
        'overallScore': json['overall_score'],
    };
}

export function SuburbSummaryToJSON(json: any): SuburbSummary {
    return SuburbSummaryToJSONTyped(json, false);
}

export function SuburbSummaryToJSONTyped(value?: SuburbSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'suburb_id': value['suburbId'],
        'name': value['name'],
        'state': value['state'],
        'postcode': value['postcode'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'zone_category': value['zoneCategory'],
        'overall_score': value['overallScore'],
    };
}

