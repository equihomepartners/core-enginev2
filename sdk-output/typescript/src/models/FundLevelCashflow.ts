/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Fund-level cashflow model.
 * @export
 * @interface FundLevelCashflow
 */
export interface FundLevelCashflow {
    /**
     * Year
     * @type {number}
     * @memberof FundLevelCashflow
     */
    year: number;
    /**
     * Month (if applicable)
     * @type {number}
     * @memberof FundLevelCashflow
     */
    month?: number;
    /**
     * Quarter (if applicable)
     * @type {number}
     * @memberof FundLevelCashflow
     */
    quarter?: number;
    /**
     * Capital calls
     * @type {number}
     * @memberof FundLevelCashflow
     */
    capitalCalls: number;
    /**
     * Loan investments
     * @type {number}
     * @memberof FundLevelCashflow
     */
    loanInvestments: number;
    /**
     * Origination fees
     * @type {number}
     * @memberof FundLevelCashflow
     */
    originationFees: number;
    /**
     * Principal repayments
     * @type {number}
     * @memberof FundLevelCashflow
     */
    principalRepayments: number;
    /**
     * Interest income
     * @type {number}
     * @memberof FundLevelCashflow
     */
    interestIncome: number;
    /**
     * Appreciation share
     * @type {number}
     * @memberof FundLevelCashflow
     */
    appreciationShare: number;
    /**
     * Management fees
     * @type {number}
     * @memberof FundLevelCashflow
     */
    managementFees: number;
    /**
     * Fund expenses
     * @type {number}
     * @memberof FundLevelCashflow
     */
    fundExpenses: number;
    /**
     * Leverage draws
     * @type {number}
     * @memberof FundLevelCashflow
     */
    leverageDraws: number;
    /**
     * Leverage repayments
     * @type {number}
     * @memberof FundLevelCashflow
     */
    leverageRepayments: number;
    /**
     * Leverage interest
     * @type {number}
     * @memberof FundLevelCashflow
     */
    leverageInterest: number;
    /**
     * Distributions
     * @type {number}
     * @memberof FundLevelCashflow
     */
    distributions: number;
    /**
     * Net cashflow
     * @type {number}
     * @memberof FundLevelCashflow
     */
    netCashflow: number;
    /**
     * Cumulative cashflow
     * @type {number}
     * @memberof FundLevelCashflow
     */
    cumulativeCashflow: number;
}

/**
 * Check if a given object implements the FundLevelCashflow interface.
 */
export function instanceOfFundLevelCashflow(value: object): value is FundLevelCashflow {
    if (!('year' in value) || value['year'] === undefined) return false;
    if (!('capitalCalls' in value) || value['capitalCalls'] === undefined) return false;
    if (!('loanInvestments' in value) || value['loanInvestments'] === undefined) return false;
    if (!('originationFees' in value) || value['originationFees'] === undefined) return false;
    if (!('principalRepayments' in value) || value['principalRepayments'] === undefined) return false;
    if (!('interestIncome' in value) || value['interestIncome'] === undefined) return false;
    if (!('appreciationShare' in value) || value['appreciationShare'] === undefined) return false;
    if (!('managementFees' in value) || value['managementFees'] === undefined) return false;
    if (!('fundExpenses' in value) || value['fundExpenses'] === undefined) return false;
    if (!('leverageDraws' in value) || value['leverageDraws'] === undefined) return false;
    if (!('leverageRepayments' in value) || value['leverageRepayments'] === undefined) return false;
    if (!('leverageInterest' in value) || value['leverageInterest'] === undefined) return false;
    if (!('distributions' in value) || value['distributions'] === undefined) return false;
    if (!('netCashflow' in value) || value['netCashflow'] === undefined) return false;
    if (!('cumulativeCashflow' in value) || value['cumulativeCashflow'] === undefined) return false;
    return true;
}

export function FundLevelCashflowFromJSON(json: any): FundLevelCashflow {
    return FundLevelCashflowFromJSONTyped(json, false);
}

export function FundLevelCashflowFromJSONTyped(json: any, ignoreDiscriminator: boolean): FundLevelCashflow {
    if (json == null) {
        return json;
    }
    return {
        
        'year': json['year'],
        'month': json['month'] == null ? undefined : json['month'],
        'quarter': json['quarter'] == null ? undefined : json['quarter'],
        'capitalCalls': json['capital_calls'],
        'loanInvestments': json['loan_investments'],
        'originationFees': json['origination_fees'],
        'principalRepayments': json['principal_repayments'],
        'interestIncome': json['interest_income'],
        'appreciationShare': json['appreciation_share'],
        'managementFees': json['management_fees'],
        'fundExpenses': json['fund_expenses'],
        'leverageDraws': json['leverage_draws'],
        'leverageRepayments': json['leverage_repayments'],
        'leverageInterest': json['leverage_interest'],
        'distributions': json['distributions'],
        'netCashflow': json['net_cashflow'],
        'cumulativeCashflow': json['cumulative_cashflow'],
    };
}

export function FundLevelCashflowToJSON(json: any): FundLevelCashflow {
    return FundLevelCashflowToJSONTyped(json, false);
}

export function FundLevelCashflowToJSONTyped(value?: FundLevelCashflow | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'year': value['year'],
        'month': value['month'],
        'quarter': value['quarter'],
        'capital_calls': value['capitalCalls'],
        'loan_investments': value['loanInvestments'],
        'origination_fees': value['originationFees'],
        'principal_repayments': value['principalRepayments'],
        'interest_income': value['interestIncome'],
        'appreciation_share': value['appreciationShare'],
        'management_fees': value['managementFees'],
        'fund_expenses': value['fundExpenses'],
        'leverage_draws': value['leverageDraws'],
        'leverage_repayments': value['leverageRepayments'],
        'leverage_interest': value['leverageInterest'],
        'distributions': value['distributions'],
        'net_cashflow': value['netCashflow'],
        'cumulative_cashflow': value['cumulativeCashflow'],
    };
}

