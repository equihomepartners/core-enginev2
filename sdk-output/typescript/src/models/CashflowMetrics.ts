/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GPMetrics } from './GPMetrics';
import {
    GPMetricsFromJSON,
    GPMetricsFromJSONTyped,
    GPMetricsToJSON,
    GPMetricsToJSONTyped,
} from './GPMetrics';
import type { FundLevelMetrics } from './FundLevelMetrics';
import {
    FundLevelMetricsFromJSON,
    FundLevelMetricsFromJSONTyped,
    FundLevelMetricsToJSON,
    FundLevelMetricsToJSONTyped,
} from './FundLevelMetrics';
import type { MetricsByYear } from './MetricsByYear';
import {
    MetricsByYearFromJSON,
    MetricsByYearFromJSONTyped,
    MetricsByYearToJSON,
    MetricsByYearToJSONTyped,
} from './MetricsByYear';
import type { LPMetrics } from './LPMetrics';
import {
    LPMetricsFromJSON,
    LPMetricsFromJSONTyped,
    LPMetricsToJSON,
    LPMetricsToJSONTyped,
} from './LPMetrics';

/**
 * Cashflow metrics model.
 * @export
 * @interface CashflowMetrics
 */
export interface CashflowMetrics {
    /**
     * Fund-level metrics
     * @type {FundLevelMetrics}
     * @memberof CashflowMetrics
     */
    fundLevelMetrics: FundLevelMetrics;
    /**
     * LP metrics
     * @type {LPMetrics}
     * @memberof CashflowMetrics
     */
    lpMetrics: LPMetrics;
    /**
     * GP metrics
     * @type {GPMetrics}
     * @memberof CashflowMetrics
     */
    gpMetrics: GPMetrics;
    /**
     * Metrics by year
     * @type {Array<MetricsByYear>}
     * @memberof CashflowMetrics
     */
    metricsByYear: Array<MetricsByYear>;
}

/**
 * Check if a given object implements the CashflowMetrics interface.
 */
export function instanceOfCashflowMetrics(value: object): value is CashflowMetrics {
    if (!('fundLevelMetrics' in value) || value['fundLevelMetrics'] === undefined) return false;
    if (!('lpMetrics' in value) || value['lpMetrics'] === undefined) return false;
    if (!('gpMetrics' in value) || value['gpMetrics'] === undefined) return false;
    if (!('metricsByYear' in value) || value['metricsByYear'] === undefined) return false;
    return true;
}

export function CashflowMetricsFromJSON(json: any): CashflowMetrics {
    return CashflowMetricsFromJSONTyped(json, false);
}

export function CashflowMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashflowMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'fundLevelMetrics': FundLevelMetricsFromJSON(json['fund_level_metrics']),
        'lpMetrics': LPMetricsFromJSON(json['lp_metrics']),
        'gpMetrics': GPMetricsFromJSON(json['gp_metrics']),
        'metricsByYear': ((json['metrics_by_year'] as Array<any>).map(MetricsByYearFromJSON)),
    };
}

export function CashflowMetricsToJSON(json: any): CashflowMetrics {
    return CashflowMetricsToJSONTyped(json, false);
}

export function CashflowMetricsToJSONTyped(value?: CashflowMetrics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fund_level_metrics': FundLevelMetricsToJSON(value['fundLevelMetrics']),
        'lp_metrics': LPMetricsToJSON(value['lpMetrics']),
        'gp_metrics': GPMetricsToJSON(value['gpMetrics']),
        'metrics_by_year': ((value['metricsByYear'] as Array<any>).map(MetricsByYearToJSON)),
    };
}

