/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Concentration chart point model.
 * @export
 * @interface ConcentrationPoint
 */
export interface ConcentrationPoint {
    /**
     * Category (e.g., zone, suburb)
     * @type {string}
     * @memberof ConcentrationPoint
     */
    category: string;
    /**
     * Name (e.g., 'green', 'Bondi')
     * @type {string}
     * @memberof ConcentrationPoint
     */
    name: string;
    /**
     * Concentration value
     * @type {number}
     * @memberof ConcentrationPoint
     */
    value: number;
    /**
     * Percentage of total
     * @type {number}
     * @memberof ConcentrationPoint
     */
    percentage: number;
}

/**
 * Check if a given object implements the ConcentrationPoint interface.
 */
export function instanceOfConcentrationPoint(value: object): value is ConcentrationPoint {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('percentage' in value) || value['percentage'] === undefined) return false;
    return true;
}

export function ConcentrationPointFromJSON(json: any): ConcentrationPoint {
    return ConcentrationPointFromJSONTyped(json, false);
}

export function ConcentrationPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConcentrationPoint {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'],
        'name': json['name'],
        'value': json['value'],
        'percentage': json['percentage'],
    };
}

export function ConcentrationPointToJSON(json: any): ConcentrationPoint {
    return ConcentrationPointToJSONTyped(json, false);
}

export function ConcentrationPointToJSONTyped(value?: ConcentrationPoint | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': value['category'],
        'name': value['name'],
        'value': value['value'],
        'percentage': value['percentage'],
    };
}

