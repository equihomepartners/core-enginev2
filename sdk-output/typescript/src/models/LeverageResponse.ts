/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SrcApiRoutersPortfolioStressTestResult } from './SrcApiRoutersPortfolioStressTestResult';
import {
    SrcApiRoutersPortfolioStressTestResultFromJSON,
    SrcApiRoutersPortfolioStressTestResultFromJSONTyped,
    SrcApiRoutersPortfolioStressTestResultToJSON,
    SrcApiRoutersPortfolioStressTestResultToJSONTyped,
} from './SrcApiRoutersPortfolioStressTestResult';
import type { LeverageFacility } from './LeverageFacility';
import {
    LeverageFacilityFromJSON,
    LeverageFacilityFromJSONTyped,
    LeverageFacilityToJSON,
    LeverageFacilityToJSONTyped,
} from './LeverageFacility';
import type { SrcApiRoutersPortfolioLeverageMetrics } from './SrcApiRoutersPortfolioLeverageMetrics';
import {
    SrcApiRoutersPortfolioLeverageMetricsFromJSON,
    SrcApiRoutersPortfolioLeverageMetricsFromJSONTyped,
    SrcApiRoutersPortfolioLeverageMetricsToJSON,
    SrcApiRoutersPortfolioLeverageMetricsToJSONTyped,
} from './SrcApiRoutersPortfolioLeverageMetrics';
import type { LeverageVisualization } from './LeverageVisualization';
import {
    LeverageVisualizationFromJSON,
    LeverageVisualizationFromJSONTyped,
    LeverageVisualizationToJSON,
    LeverageVisualizationToJSONTyped,
} from './LeverageVisualization';

/**
 * Leverage response model.
 * @export
 * @interface LeverageResponse
 */
export interface LeverageResponse {
    /**
     * Debt facilities
     * @type {Array<LeverageFacility>}
     * @memberof LeverageResponse
     */
    facilities: Array<LeverageFacility>;
    /**
     * Leverage metrics
     * @type {SrcApiRoutersPortfolioLeverageMetrics}
     * @memberof LeverageResponse
     */
    metrics: SrcApiRoutersPortfolioLeverageMetrics;
    /**
     * Visualization data
     * @type {LeverageVisualization}
     * @memberof LeverageResponse
     */
    visualization: LeverageVisualization;
    /**
     * Stress test results
     * @type {{ [key: string]: SrcApiRoutersPortfolioStressTestResult; }}
     * @memberof LeverageResponse
     */
    stressTestResults?: { [key: string]: SrcApiRoutersPortfolioStressTestResult; };
}

/**
 * Check if a given object implements the LeverageResponse interface.
 */
export function instanceOfLeverageResponse(value: object): value is LeverageResponse {
    if (!('facilities' in value) || value['facilities'] === undefined) return false;
    if (!('metrics' in value) || value['metrics'] === undefined) return false;
    if (!('visualization' in value) || value['visualization'] === undefined) return false;
    return true;
}

export function LeverageResponseFromJSON(json: any): LeverageResponse {
    return LeverageResponseFromJSONTyped(json, false);
}

export function LeverageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeverageResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'facilities': ((json['facilities'] as Array<any>).map(LeverageFacilityFromJSON)),
        'metrics': SrcApiRoutersPortfolioLeverageMetricsFromJSON(json['metrics']),
        'visualization': LeverageVisualizationFromJSON(json['visualization']),
        'stressTestResults': json['stress_test_results'] == null ? undefined : (mapValues(json['stress_test_results'], SrcApiRoutersPortfolioStressTestResultFromJSON)),
    };
}

export function LeverageResponseToJSON(json: any): LeverageResponse {
    return LeverageResponseToJSONTyped(json, false);
}

export function LeverageResponseToJSONTyped(value?: LeverageResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'facilities': ((value['facilities'] as Array<any>).map(LeverageFacilityToJSON)),
        'metrics': SrcApiRoutersPortfolioLeverageMetricsToJSON(value['metrics']),
        'visualization': LeverageVisualizationToJSON(value['visualization']),
        'stress_test_results': value['stressTestResults'] == null ? undefined : (mapValues(value['stressTestResults'], SrcApiRoutersPortfolioStressTestResultToJSON)),
    };
}

