/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Model for waterfall distribution data.
 * @export
 * @interface WaterfallDistributionModel
 */
export interface WaterfallDistributionModel {
    /**
     * Return of capital amount
     * @type {number}
     * @memberof WaterfallDistributionModel
     */
    returnOfCapital: number;
    /**
     * Preferred return amount
     * @type {number}
     * @memberof WaterfallDistributionModel
     */
    preferredReturn: number;
    /**
     * GP catch-up amount
     * @type {number}
     * @memberof WaterfallDistributionModel
     */
    catchUp: number;
    /**
     * Carried interest amount
     * @type {number}
     * @memberof WaterfallDistributionModel
     */
    carriedInterest: number;
    /**
     * Residual to LP amount
     * @type {number}
     * @memberof WaterfallDistributionModel
     */
    residualToLp: number;
    /**
     * Total to LP amount
     * @type {number}
     * @memberof WaterfallDistributionModel
     */
    totalToLp: number;
    /**
     * Total to GP amount
     * @type {number}
     * @memberof WaterfallDistributionModel
     */
    totalToGp: number;
    /**
     * Total distributed amount
     * @type {number}
     * @memberof WaterfallDistributionModel
     */
    totalDistributed: number;
}

/**
 * Check if a given object implements the WaterfallDistributionModel interface.
 */
export function instanceOfWaterfallDistributionModel(value: object): value is WaterfallDistributionModel {
    if (!('returnOfCapital' in value) || value['returnOfCapital'] === undefined) return false;
    if (!('preferredReturn' in value) || value['preferredReturn'] === undefined) return false;
    if (!('catchUp' in value) || value['catchUp'] === undefined) return false;
    if (!('carriedInterest' in value) || value['carriedInterest'] === undefined) return false;
    if (!('residualToLp' in value) || value['residualToLp'] === undefined) return false;
    if (!('totalToLp' in value) || value['totalToLp'] === undefined) return false;
    if (!('totalToGp' in value) || value['totalToGp'] === undefined) return false;
    if (!('totalDistributed' in value) || value['totalDistributed'] === undefined) return false;
    return true;
}

export function WaterfallDistributionModelFromJSON(json: any): WaterfallDistributionModel {
    return WaterfallDistributionModelFromJSONTyped(json, false);
}

export function WaterfallDistributionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): WaterfallDistributionModel {
    if (json == null) {
        return json;
    }
    return {
        
        'returnOfCapital': json['return_of_capital'],
        'preferredReturn': json['preferred_return'],
        'catchUp': json['catch_up'],
        'carriedInterest': json['carried_interest'],
        'residualToLp': json['residual_to_lp'],
        'totalToLp': json['total_to_lp'],
        'totalToGp': json['total_to_gp'],
        'totalDistributed': json['total_distributed'],
    };
}

export function WaterfallDistributionModelToJSON(json: any): WaterfallDistributionModel {
    return WaterfallDistributionModelToJSONTyped(json, false);
}

export function WaterfallDistributionModelToJSONTyped(value?: WaterfallDistributionModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'return_of_capital': value['returnOfCapital'],
        'preferred_return': value['preferredReturn'],
        'catch_up': value['catchUp'],
        'carried_interest': value['carriedInterest'],
        'residual_to_lp': value['residualToLp'],
        'total_to_lp': value['totalToLp'],
        'total_to_gp': value['totalToGp'],
        'total_distributed': value['totalDistributed'],
    };
}

