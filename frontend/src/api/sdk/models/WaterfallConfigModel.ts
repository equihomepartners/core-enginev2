/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WaterfallStructureEnum } from './WaterfallStructureEnum';
import {
    WaterfallStructureEnumFromJSON,
    WaterfallStructureEnumFromJSONTyped,
    WaterfallStructureEnumToJSON,
    WaterfallStructureEnumToJSONTyped,
} from './WaterfallStructureEnum';

/**
 * Model for waterfall configuration.
 * @export
 * @interface WaterfallConfigModel
 */
export interface WaterfallConfigModel {
    /**
     * Waterfall structure type
     * @type {WaterfallStructureEnum}
     * @memberof WaterfallConfigModel
     */
    waterfallStructure?: WaterfallStructureEnum;
    /**
     * Hurdle rate (preferred return)
     * @type {number}
     * @memberof WaterfallConfigModel
     */
    hurdleRate?: number;
    /**
     * Carried interest rate
     * @type {number}
     * @memberof WaterfallConfigModel
     */
    carriedInterestRate?: number;
    /**
     * GP catch-up rate
     * @type {number}
     * @memberof WaterfallConfigModel
     */
    catchUpRate?: number;
    /**
     * GP commitment percentage
     * @type {number}
     * @memberof WaterfallConfigModel
     */
    gpCommitmentPercentage?: number;
    /**
     * Enable multi-tier waterfall
     * @type {boolean}
     * @memberof WaterfallConfigModel
     */
    multiTierEnabled?: boolean;
    /**
     * Enable clawback
     * @type {boolean}
     * @memberof WaterfallConfigModel
     */
    enableClawback?: boolean;
    /**
     * Clawback threshold
     * @type {number}
     * @memberof WaterfallConfigModel
     */
    clawbackThreshold?: number;
}



/**
 * Check if a given object implements the WaterfallConfigModel interface.
 */
export function instanceOfWaterfallConfigModel(value: object): value is WaterfallConfigModel {
    return true;
}

export function WaterfallConfigModelFromJSON(json: any): WaterfallConfigModel {
    return WaterfallConfigModelFromJSONTyped(json, false);
}

export function WaterfallConfigModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): WaterfallConfigModel {
    if (json == null) {
        return json;
    }
    return {
        
        'waterfallStructure': json['waterfall_structure'] == null ? undefined : WaterfallStructureEnumFromJSON(json['waterfall_structure']),
        'hurdleRate': json['hurdle_rate'] == null ? undefined : json['hurdle_rate'],
        'carriedInterestRate': json['carried_interest_rate'] == null ? undefined : json['carried_interest_rate'],
        'catchUpRate': json['catch_up_rate'] == null ? undefined : json['catch_up_rate'],
        'gpCommitmentPercentage': json['gp_commitment_percentage'] == null ? undefined : json['gp_commitment_percentage'],
        'multiTierEnabled': json['multi_tier_enabled'] == null ? undefined : json['multi_tier_enabled'],
        'enableClawback': json['enable_clawback'] == null ? undefined : json['enable_clawback'],
        'clawbackThreshold': json['clawback_threshold'] == null ? undefined : json['clawback_threshold'],
    };
}

export function WaterfallConfigModelToJSON(json: any): WaterfallConfigModel {
    return WaterfallConfigModelToJSONTyped(json, false);
}

export function WaterfallConfigModelToJSONTyped(value?: WaterfallConfigModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'waterfall_structure': WaterfallStructureEnumToJSON(value['waterfallStructure']),
        'hurdle_rate': value['hurdleRate'],
        'carried_interest_rate': value['carriedInterestRate'],
        'catch_up_rate': value['catchUpRate'],
        'gp_commitment_percentage': value['gpCommitmentPercentage'],
        'multi_tier_enabled': value['multiTierEnabled'],
        'enable_clawback': value['enableClawback'],
        'clawback_threshold': value['clawbackThreshold'],
    };
}

