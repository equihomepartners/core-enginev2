/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Leverage facility model.
 * @export
 * @interface LeverageFacility
 */
export interface LeverageFacility {
    /**
     * Facility ID
     * @type {string}
     * @memberof LeverageFacility
     */
    facilityId: string;
    /**
     * Facility type (nav_line, subscription_line)
     * @type {string}
     * @memberof LeverageFacility
     */
    facilityType: string;
    /**
     * Maximum facility amount
     * @type {number}
     * @memberof LeverageFacility
     */
    maxAmount: number;
    /**
     * Annual interest rate (as a decimal)
     * @type {number}
     * @memberof LeverageFacility
     */
    interestRate: number;
    /**
     * Commitment fee on undrawn balance (basis points)
     * @type {number}
     * @memberof LeverageFacility
     */
    commitmentFeeBps: number;
    /**
     * Term of the facility in years
     * @type {number}
     * @memberof LeverageFacility
     */
    termYears: number;
    /**
     * Maximum advance rate (for NAV lines)
     * @type {number}
     * @memberof LeverageFacility
     */
    advanceRate?: number;
    /**
     * Current outstanding balance
     * @type {number}
     * @memberof LeverageFacility
     */
    currentBalance: number;
    /**
     * Available amount to draw
     * @type {number}
     * @memberof LeverageFacility
     */
    availableAmount: number;
    /**
     * Date when the facility was first drawn
     * @type {string}
     * @memberof LeverageFacility
     */
    inceptionDate?: string;
    /**
     * Date when the facility matures
     * @type {string}
     * @memberof LeverageFacility
     */
    maturityDate?: string;
}

/**
 * Check if a given object implements the LeverageFacility interface.
 */
export function instanceOfLeverageFacility(value: object): value is LeverageFacility {
    if (!('facilityId' in value) || value['facilityId'] === undefined) return false;
    if (!('facilityType' in value) || value['facilityType'] === undefined) return false;
    if (!('maxAmount' in value) || value['maxAmount'] === undefined) return false;
    if (!('interestRate' in value) || value['interestRate'] === undefined) return false;
    if (!('commitmentFeeBps' in value) || value['commitmentFeeBps'] === undefined) return false;
    if (!('termYears' in value) || value['termYears'] === undefined) return false;
    if (!('currentBalance' in value) || value['currentBalance'] === undefined) return false;
    if (!('availableAmount' in value) || value['availableAmount'] === undefined) return false;
    return true;
}

export function LeverageFacilityFromJSON(json: any): LeverageFacility {
    return LeverageFacilityFromJSONTyped(json, false);
}

export function LeverageFacilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeverageFacility {
    if (json == null) {
        return json;
    }
    return {
        
        'facilityId': json['facility_id'],
        'facilityType': json['facility_type'],
        'maxAmount': json['max_amount'],
        'interestRate': json['interest_rate'],
        'commitmentFeeBps': json['commitment_fee_bps'],
        'termYears': json['term_years'],
        'advanceRate': json['advance_rate'] == null ? undefined : json['advance_rate'],
        'currentBalance': json['current_balance'],
        'availableAmount': json['available_amount'],
        'inceptionDate': json['inception_date'] == null ? undefined : json['inception_date'],
        'maturityDate': json['maturity_date'] == null ? undefined : json['maturity_date'],
    };
}

export function LeverageFacilityToJSON(json: any): LeverageFacility {
    return LeverageFacilityToJSONTyped(json, false);
}

export function LeverageFacilityToJSONTyped(value?: LeverageFacility | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'facility_id': value['facilityId'],
        'facility_type': value['facilityType'],
        'max_amount': value['maxAmount'],
        'interest_rate': value['interestRate'],
        'commitment_fee_bps': value['commitmentFeeBps'],
        'term_years': value['termYears'],
        'advance_rate': value['advanceRate'],
        'current_balance': value['currentBalance'],
        'available_amount': value['availableAmount'],
        'inception_date': value['inceptionDate'],
        'maturity_date': value['maturityDate'],
    };
}

