/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Exit scenario request model.
 * @export
 * @interface ExitScenarioRequest
 */
export interface ExitScenarioRequest {
    /**
     * Base annual exit probability
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    baseExitRate?: number;
    /**
     * Weight for time-based exit probability
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    timeFactor?: number;
    /**
     * Weight for price-based exit probability
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    priceFactor?: number;
    /**
     * Minimum holding period in years
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    minHoldPeriod?: number;
    /**
     * Maximum holding period in years
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    maxHoldPeriod?: number;
    /**
     * Base weight for sale exits
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    saleWeight?: number;
    /**
     * Base weight for refinance exits
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    refinanceWeight?: number;
    /**
     * Base weight for default exits
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    defaultWeight?: number;
    /**
     * How much appreciation increases sale probability
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    appreciationSaleMultiplier?: number;
    /**
     * How much interest rate changes affect refinance probability
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    interestRateRefinanceMultiplier?: number;
    /**
     * How much economic factors affect default probability
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    economicFactorDefaultMultiplier?: number;
    /**
     * Fund's share of appreciation
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    appreciationShare?: number;
    /**
     * Minimum appreciation share
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    minAppreciationShare?: number;
    /**
     * Maximum appreciation share
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    maxAppreciationShare?: number;
    /**
     * Thresholds for tiered appreciation sharing
     * @type {Array<number>}
     * @memberof ExitScenarioRequest
     */
    tieredAppreciationThresholds?: Array<number>;
    /**
     * Shares for tiered appreciation sharing
     * @type {Array<number>}
     * @memberof ExitScenarioRequest
     */
    tieredAppreciationShares?: Array<number>;
    /**
     * Base annual default probability
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    baseDefaultRate?: number;
    /**
     * Recovery rate in case of default
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    recoveryRate?: number;
    /**
     * Cost of foreclosure as percentage of property value
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    foreclosureCost?: number;
    /**
     * Time to complete foreclosure in years
     * @type {number}
     * @memberof ExitScenarioRequest
     */
    foreclosureTime?: number;
}

/**
 * Check if a given object implements the ExitScenarioRequest interface.
 */
export function instanceOfExitScenarioRequest(value: object): value is ExitScenarioRequest {
    return true;
}

export function ExitScenarioRequestFromJSON(json: any): ExitScenarioRequest {
    return ExitScenarioRequestFromJSONTyped(json, false);
}

export function ExitScenarioRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExitScenarioRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'baseExitRate': json['base_exit_rate'] == null ? undefined : json['base_exit_rate'],
        'timeFactor': json['time_factor'] == null ? undefined : json['time_factor'],
        'priceFactor': json['price_factor'] == null ? undefined : json['price_factor'],
        'minHoldPeriod': json['min_hold_period'] == null ? undefined : json['min_hold_period'],
        'maxHoldPeriod': json['max_hold_period'] == null ? undefined : json['max_hold_period'],
        'saleWeight': json['sale_weight'] == null ? undefined : json['sale_weight'],
        'refinanceWeight': json['refinance_weight'] == null ? undefined : json['refinance_weight'],
        'defaultWeight': json['default_weight'] == null ? undefined : json['default_weight'],
        'appreciationSaleMultiplier': json['appreciation_sale_multiplier'] == null ? undefined : json['appreciation_sale_multiplier'],
        'interestRateRefinanceMultiplier': json['interest_rate_refinance_multiplier'] == null ? undefined : json['interest_rate_refinance_multiplier'],
        'economicFactorDefaultMultiplier': json['economic_factor_default_multiplier'] == null ? undefined : json['economic_factor_default_multiplier'],
        'appreciationShare': json['appreciation_share'] == null ? undefined : json['appreciation_share'],
        'minAppreciationShare': json['min_appreciation_share'] == null ? undefined : json['min_appreciation_share'],
        'maxAppreciationShare': json['max_appreciation_share'] == null ? undefined : json['max_appreciation_share'],
        'tieredAppreciationThresholds': json['tiered_appreciation_thresholds'] == null ? undefined : json['tiered_appreciation_thresholds'],
        'tieredAppreciationShares': json['tiered_appreciation_shares'] == null ? undefined : json['tiered_appreciation_shares'],
        'baseDefaultRate': json['base_default_rate'] == null ? undefined : json['base_default_rate'],
        'recoveryRate': json['recovery_rate'] == null ? undefined : json['recovery_rate'],
        'foreclosureCost': json['foreclosure_cost'] == null ? undefined : json['foreclosure_cost'],
        'foreclosureTime': json['foreclosure_time'] == null ? undefined : json['foreclosure_time'],
    };
}

export function ExitScenarioRequestToJSON(json: any): ExitScenarioRequest {
    return ExitScenarioRequestToJSONTyped(json, false);
}

export function ExitScenarioRequestToJSONTyped(value?: ExitScenarioRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'base_exit_rate': value['baseExitRate'],
        'time_factor': value['timeFactor'],
        'price_factor': value['priceFactor'],
        'min_hold_period': value['minHoldPeriod'],
        'max_hold_period': value['maxHoldPeriod'],
        'sale_weight': value['saleWeight'],
        'refinance_weight': value['refinanceWeight'],
        'default_weight': value['defaultWeight'],
        'appreciation_sale_multiplier': value['appreciationSaleMultiplier'],
        'interest_rate_refinance_multiplier': value['interestRateRefinanceMultiplier'],
        'economic_factor_default_multiplier': value['economicFactorDefaultMultiplier'],
        'appreciation_share': value['appreciationShare'],
        'min_appreciation_share': value['minAppreciationShare'],
        'max_appreciation_share': value['maxAppreciationShare'],
        'tiered_appreciation_thresholds': value['tieredAppreciationThresholds'],
        'tiered_appreciation_shares': value['tieredAppreciationShares'],
        'base_default_rate': value['baseDefaultRate'],
        'recovery_rate': value['recoveryRate'],
        'foreclosure_cost': value['foreclosureCost'],
        'foreclosure_time': value['foreclosureTime'],
    };
}

