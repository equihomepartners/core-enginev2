/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Property distribution model.
 * @export
 * @interface PropertyDistribution
 */
export interface PropertyDistribution {
    /**
     * Total number of properties
     * @type {number}
     * @memberof PropertyDistribution
     */
    totalProperties: number;
    /**
     * Distribution by property type
     * @type {{ [key: string]: number; }}
     * @memberof PropertyDistribution
     */
    propertyTypes: { [key: string]: number; };
    /**
     * Distribution by number of bedrooms
     * @type {{ [key: string]: number; }}
     * @memberof PropertyDistribution
     */
    bedrooms: { [key: string]: number; };
    /**
     * Distribution by number of bathrooms
     * @type {{ [key: string]: number; }}
     * @memberof PropertyDistribution
     */
    bathrooms: { [key: string]: number; };
    /**
     * Distribution by value
     * @type {Array<object>}
     * @memberof PropertyDistribution
     */
    valueDistribution: Array<object>;
    /**
     * Distribution by zone
     * @type {{ [key: string]: number; }}
     * @memberof PropertyDistribution
     */
    zoneDistribution: { [key: string]: number; };
}

/**
 * Check if a given object implements the PropertyDistribution interface.
 */
export function instanceOfPropertyDistribution(value: object): value is PropertyDistribution {
    if (!('totalProperties' in value) || value['totalProperties'] === undefined) return false;
    if (!('propertyTypes' in value) || value['propertyTypes'] === undefined) return false;
    if (!('bedrooms' in value) || value['bedrooms'] === undefined) return false;
    if (!('bathrooms' in value) || value['bathrooms'] === undefined) return false;
    if (!('valueDistribution' in value) || value['valueDistribution'] === undefined) return false;
    if (!('zoneDistribution' in value) || value['zoneDistribution'] === undefined) return false;
    return true;
}

export function PropertyDistributionFromJSON(json: any): PropertyDistribution {
    return PropertyDistributionFromJSONTyped(json, false);
}

export function PropertyDistributionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyDistribution {
    if (json == null) {
        return json;
    }
    return {
        
        'totalProperties': json['total_properties'],
        'propertyTypes': json['property_types'],
        'bedrooms': json['bedrooms'],
        'bathrooms': json['bathrooms'],
        'valueDistribution': json['value_distribution'],
        'zoneDistribution': json['zone_distribution'],
    };
}

export function PropertyDistributionToJSON(json: any): PropertyDistribution {
    return PropertyDistributionToJSONTyped(json, false);
}

export function PropertyDistributionToJSONTyped(value?: PropertyDistribution | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_properties': value['totalProperties'],
        'property_types': value['propertyTypes'],
        'bedrooms': value['bedrooms'],
        'bathrooms': value['bathrooms'],
        'value_distribution': value['valueDistribution'],
        'zone_distribution': value['zoneDistribution'],
    };
}

