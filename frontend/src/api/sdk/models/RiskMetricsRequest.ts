/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request model for risk metrics calculation.
 * @export
 * @interface RiskMetricsRequest
 */
export interface RiskMetricsRequest {
    /**
     * Simulation ID
     * @type {string}
     * @memberof RiskMetricsRequest
     */
    simulationId: string;
    /**
     * Confidence level for Value at Risk (VaR) calculation (0-1)
     * @type {number}
     * @memberof RiskMetricsRequest
     */
    varConfidenceLevel?: number;
    /**
     * Risk-free rate for risk-adjusted return calculations (0-1)
     * @type {number}
     * @memberof RiskMetricsRequest
     */
    riskFreeRate?: number;
    /**
     * Benchmark return for alpha and information ratio calculations (0-1)
     * @type {number}
     * @memberof RiskMetricsRequest
     */
    benchmarkReturn?: number;
    /**
     * Minimum acceptable return for Sortino ratio calculation (0-1)
     * @type {number}
     * @memberof RiskMetricsRequest
     */
    minAcceptableReturn?: number;
    /**
     * Threshold for tail risk calculation (0-1)
     * @type {number}
     * @memberof RiskMetricsRequest
     */
    tailRiskThreshold?: number;
    /**
     * Number of Monte Carlo simulations for risk metrics
     * @type {number}
     * @memberof RiskMetricsRequest
     */
    monteCarloSimulations?: number;
    /**
     * Whether to enable sensitivity analysis
     * @type {boolean}
     * @memberof RiskMetricsRequest
     */
    enableSensitivityAnalysis?: boolean;
    /**
     * Parameters to analyze in sensitivity analysis
     * @type {Array<string>}
     * @memberof RiskMetricsRequest
     */
    sensitivityParameters?: Array<string>;
}

/**
 * Check if a given object implements the RiskMetricsRequest interface.
 */
export function instanceOfRiskMetricsRequest(value: object): value is RiskMetricsRequest {
    if (!('simulationId' in value) || value['simulationId'] === undefined) return false;
    return true;
}

export function RiskMetricsRequestFromJSON(json: any): RiskMetricsRequest {
    return RiskMetricsRequestFromJSONTyped(json, false);
}

export function RiskMetricsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RiskMetricsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'simulationId': json['simulation_id'],
        'varConfidenceLevel': json['var_confidence_level'] == null ? undefined : json['var_confidence_level'],
        'riskFreeRate': json['risk_free_rate'] == null ? undefined : json['risk_free_rate'],
        'benchmarkReturn': json['benchmark_return'] == null ? undefined : json['benchmark_return'],
        'minAcceptableReturn': json['min_acceptable_return'] == null ? undefined : json['min_acceptable_return'],
        'tailRiskThreshold': json['tail_risk_threshold'] == null ? undefined : json['tail_risk_threshold'],
        'monteCarloSimulations': json['monte_carlo_simulations'] == null ? undefined : json['monte_carlo_simulations'],
        'enableSensitivityAnalysis': json['enable_sensitivity_analysis'] == null ? undefined : json['enable_sensitivity_analysis'],
        'sensitivityParameters': json['sensitivity_parameters'] == null ? undefined : json['sensitivity_parameters'],
    };
}

export function RiskMetricsRequestToJSON(json: any): RiskMetricsRequest {
    return RiskMetricsRequestToJSONTyped(json, false);
}

export function RiskMetricsRequestToJSONTyped(value?: RiskMetricsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'simulation_id': value['simulationId'],
        'var_confidence_level': value['varConfidenceLevel'],
        'risk_free_rate': value['riskFreeRate'],
        'benchmark_return': value['benchmarkReturn'],
        'min_acceptable_return': value['minAcceptableReturn'],
        'tail_risk_threshold': value['tailRiskThreshold'],
        'monte_carlo_simulations': value['monteCarloSimulations'],
        'enable_sensitivity_analysis': value['enableSensitivityAnalysis'],
        'sensitivity_parameters': value['sensitivityParameters'],
    };
}

