/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Property value request model.
 * @export
 * @interface PropertyValueRequest
 */
export interface PropertyValueRequest {
    /**
     * Property ID
     * @type {string}
     * @memberof PropertyValueRequest
     */
    propertyId: string;
    /**
     * Zone name
     * @type {string}
     * @memberof PropertyValueRequest
     */
    zone: string;
    /**
     * Suburb ID (optional)
     * @type {string}
     * @memberof PropertyValueRequest
     */
    suburbId?: string;
    /**
     * Initial property value
     * @type {number}
     * @memberof PropertyValueRequest
     */
    initialValue: number;
    /**
     * Month index (0-based)
     * @type {number}
     * @memberof PropertyValueRequest
     */
    month: number;
}

/**
 * Check if a given object implements the PropertyValueRequest interface.
 */
export function instanceOfPropertyValueRequest(value: object): value is PropertyValueRequest {
    if (!('propertyId' in value) || value['propertyId'] === undefined) return false;
    if (!('zone' in value) || value['zone'] === undefined) return false;
    if (!('initialValue' in value) || value['initialValue'] === undefined) return false;
    if (!('month' in value) || value['month'] === undefined) return false;
    return true;
}

export function PropertyValueRequestFromJSON(json: any): PropertyValueRequest {
    return PropertyValueRequestFromJSONTyped(json, false);
}

export function PropertyValueRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyValueRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'propertyId': json['property_id'],
        'zone': json['zone'],
        'suburbId': json['suburb_id'] == null ? undefined : json['suburb_id'],
        'initialValue': json['initial_value'],
        'month': json['month'],
    };
}

export function PropertyValueRequestToJSON(json: any): PropertyValueRequest {
    return PropertyValueRequestToJSONTyped(json, false);
}

export function PropertyValueRequestToJSONTyped(value?: PropertyValueRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'property_id': value['propertyId'],
        'zone': value['zone'],
        'suburb_id': value['suburbId'],
        'initial_value': value['initialValue'],
        'month': value['month'],
    };
}

