/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request model for cashflow calculation.
 * @export
 * @interface CashflowCalculationRequest
 */
export interface CashflowCalculationRequest {
    /**
     * Simulation ID
     * @type {string}
     * @memberof CashflowCalculationRequest
     */
    simulationId: string;
    /**
     * Time granularity for cashflow aggregation
     * @type {string}
     * @memberof CashflowCalculationRequest
     */
    timeGranularity?: CashflowCalculationRequestTimeGranularityEnum;
    /**
     * Whether to include loan-level cashflows in the results
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    includeLoanLevelCashflows?: boolean;
    /**
     * Whether to include fund-level cashflows in the results
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    includeFundLevelCashflows?: boolean;
    /**
     * Whether to include stakeholder-level cashflows in the results
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    includeStakeholderCashflows?: boolean;
    /**
     * Simple interest rate for loans (0-1)
     * @type {number}
     * @memberof CashflowCalculationRequest
     */
    simpleInterestRate?: number;
    /**
     * Origination fee rate (0-1)
     * @type {number}
     * @memberof CashflowCalculationRequest
     */
    originationFeeRate?: number;
    /**
     * Method for calculating appreciation share
     * @type {string}
     * @memberof CashflowCalculationRequest
     */
    appreciationShareMethod?: CashflowCalculationRequestAppreciationShareMethodEnum;
    /**
     * Frequency of distributions to investors
     * @type {string}
     * @memberof CashflowCalculationRequest
     */
    distributionFrequency?: CashflowCalculationRequestDistributionFrequencyEnum;
    /**
     * Lag in months between cashflow receipt and distribution
     * @type {number}
     * @memberof CashflowCalculationRequest
     */
    distributionLag?: number;
    /**
     * Whether to enable parallel processing for loan-level cashflow calculations
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    enableParallelProcessing?: boolean;
    /**
     * Number of worker processes for parallel processing
     * @type {number}
     * @memberof CashflowCalculationRequest
     */
    numWorkers?: number;
    /**
     * Whether to enable scenario analysis
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    enableScenarioAnalysis?: boolean;
    /**
     * Scenarios for scenario analysis
     * @type {Array<object>}
     * @memberof CashflowCalculationRequest
     */
    scenarios?: Array<object>;
    /**
     * Whether to enable sensitivity analysis
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    enableSensitivityAnalysis?: boolean;
    /**
     * Parameters to vary for sensitivity analysis
     * @type {Array<object>}
     * @memberof CashflowCalculationRequest
     */
    sensitivityParameters?: Array<object>;
    /**
     * Whether to enable cashflow metrics calculation
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    enableCashflowMetrics?: boolean;
    /**
     * Discount rate for DCF calculations (0-1)
     * @type {number}
     * @memberof CashflowCalculationRequest
     */
    discountRate?: number;
    /**
     * Whether to enable tax impact analysis
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    enableTaxImpactAnalysis?: boolean;
    /**
     * Tax rates for different income types
     * @type {{ [key: string]: number; }}
     * @memberof CashflowCalculationRequest
     */
    taxRates?: { [key: string]: number; };
    /**
     * Whether to enable reinvestment modeling
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    enableReinvestmentModeling?: boolean;
    /**
     * Rate of return on reinvested cashflows (0-1)
     * @type {number}
     * @memberof CashflowCalculationRequest
     */
    reinvestmentRate?: number;
    /**
     * Whether to enable liquidity analysis
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    enableLiquidityAnalysis?: boolean;
    /**
     * Minimum cash reserve as percentage of fund size (0-1)
     * @type {number}
     * @memberof CashflowCalculationRequest
     */
    minimumCashReserve?: number;
    /**
     * Whether to enable export capabilities
     * @type {boolean}
     * @memberof CashflowCalculationRequest
     */
    enableExport?: boolean;
    /**
     * Export formats
     * @type {Array<string>}
     * @memberof CashflowCalculationRequest
     */
    exportFormats?: Array<string>;
}


/**
 * @export
 */
export const CashflowCalculationRequestTimeGranularityEnum = {
    Daily: 'daily',
    Monthly: 'monthly',
    Quarterly: 'quarterly',
    Yearly: 'yearly'
} as const;
export type CashflowCalculationRequestTimeGranularityEnum = typeof CashflowCalculationRequestTimeGranularityEnum[keyof typeof CashflowCalculationRequestTimeGranularityEnum];

/**
 * @export
 */
export const CashflowCalculationRequestAppreciationShareMethodEnum = {
    ProRataLtv: 'pro_rata_ltv',
    Tiered: 'tiered',
    Fixed: 'fixed'
} as const;
export type CashflowCalculationRequestAppreciationShareMethodEnum = typeof CashflowCalculationRequestAppreciationShareMethodEnum[keyof typeof CashflowCalculationRequestAppreciationShareMethodEnum];

/**
 * @export
 */
export const CashflowCalculationRequestDistributionFrequencyEnum = {
    Monthly: 'monthly',
    Quarterly: 'quarterly',
    SemiAnnual: 'semi_annual',
    Annual: 'annual'
} as const;
export type CashflowCalculationRequestDistributionFrequencyEnum = typeof CashflowCalculationRequestDistributionFrequencyEnum[keyof typeof CashflowCalculationRequestDistributionFrequencyEnum];


/**
 * Check if a given object implements the CashflowCalculationRequest interface.
 */
export function instanceOfCashflowCalculationRequest(value: object): value is CashflowCalculationRequest {
    if (!('simulationId' in value) || value['simulationId'] === undefined) return false;
    return true;
}

export function CashflowCalculationRequestFromJSON(json: any): CashflowCalculationRequest {
    return CashflowCalculationRequestFromJSONTyped(json, false);
}

export function CashflowCalculationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashflowCalculationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'simulationId': json['simulation_id'],
        'timeGranularity': json['time_granularity'] == null ? undefined : json['time_granularity'],
        'includeLoanLevelCashflows': json['include_loan_level_cashflows'] == null ? undefined : json['include_loan_level_cashflows'],
        'includeFundLevelCashflows': json['include_fund_level_cashflows'] == null ? undefined : json['include_fund_level_cashflows'],
        'includeStakeholderCashflows': json['include_stakeholder_cashflows'] == null ? undefined : json['include_stakeholder_cashflows'],
        'simpleInterestRate': json['simple_interest_rate'] == null ? undefined : json['simple_interest_rate'],
        'originationFeeRate': json['origination_fee_rate'] == null ? undefined : json['origination_fee_rate'],
        'appreciationShareMethod': json['appreciation_share_method'] == null ? undefined : json['appreciation_share_method'],
        'distributionFrequency': json['distribution_frequency'] == null ? undefined : json['distribution_frequency'],
        'distributionLag': json['distribution_lag'] == null ? undefined : json['distribution_lag'],
        'enableParallelProcessing': json['enable_parallel_processing'] == null ? undefined : json['enable_parallel_processing'],
        'numWorkers': json['num_workers'] == null ? undefined : json['num_workers'],
        'enableScenarioAnalysis': json['enable_scenario_analysis'] == null ? undefined : json['enable_scenario_analysis'],
        'scenarios': json['scenarios'] == null ? undefined : json['scenarios'],
        'enableSensitivityAnalysis': json['enable_sensitivity_analysis'] == null ? undefined : json['enable_sensitivity_analysis'],
        'sensitivityParameters': json['sensitivity_parameters'] == null ? undefined : json['sensitivity_parameters'],
        'enableCashflowMetrics': json['enable_cashflow_metrics'] == null ? undefined : json['enable_cashflow_metrics'],
        'discountRate': json['discount_rate'] == null ? undefined : json['discount_rate'],
        'enableTaxImpactAnalysis': json['enable_tax_impact_analysis'] == null ? undefined : json['enable_tax_impact_analysis'],
        'taxRates': json['tax_rates'] == null ? undefined : json['tax_rates'],
        'enableReinvestmentModeling': json['enable_reinvestment_modeling'] == null ? undefined : json['enable_reinvestment_modeling'],
        'reinvestmentRate': json['reinvestment_rate'] == null ? undefined : json['reinvestment_rate'],
        'enableLiquidityAnalysis': json['enable_liquidity_analysis'] == null ? undefined : json['enable_liquidity_analysis'],
        'minimumCashReserve': json['minimum_cash_reserve'] == null ? undefined : json['minimum_cash_reserve'],
        'enableExport': json['enable_export'] == null ? undefined : json['enable_export'],
        'exportFormats': json['export_formats'] == null ? undefined : json['export_formats'],
    };
}

export function CashflowCalculationRequestToJSON(json: any): CashflowCalculationRequest {
    return CashflowCalculationRequestToJSONTyped(json, false);
}

export function CashflowCalculationRequestToJSONTyped(value?: CashflowCalculationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'simulation_id': value['simulationId'],
        'time_granularity': value['timeGranularity'],
        'include_loan_level_cashflows': value['includeLoanLevelCashflows'],
        'include_fund_level_cashflows': value['includeFundLevelCashflows'],
        'include_stakeholder_cashflows': value['includeStakeholderCashflows'],
        'simple_interest_rate': value['simpleInterestRate'],
        'origination_fee_rate': value['originationFeeRate'],
        'appreciation_share_method': value['appreciationShareMethod'],
        'distribution_frequency': value['distributionFrequency'],
        'distribution_lag': value['distributionLag'],
        'enable_parallel_processing': value['enableParallelProcessing'],
        'num_workers': value['numWorkers'],
        'enable_scenario_analysis': value['enableScenarioAnalysis'],
        'scenarios': value['scenarios'],
        'enable_sensitivity_analysis': value['enableSensitivityAnalysis'],
        'sensitivity_parameters': value['sensitivityParameters'],
        'enable_cashflow_metrics': value['enableCashflowMetrics'],
        'discount_rate': value['discountRate'],
        'enable_tax_impact_analysis': value['enableTaxImpactAnalysis'],
        'tax_rates': value['taxRates'],
        'enable_reinvestment_modeling': value['enableReinvestmentModeling'],
        'reinvestment_rate': value['reinvestmentRate'],
        'enable_liquidity_analysis': value['enableLiquidityAnalysis'],
        'minimum_cash_reserve': value['minimumCashReserve'],
        'enable_export': value['enableExport'],
        'export_formats': value['exportFormats'],
    };
}

