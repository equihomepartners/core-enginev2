/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Tranche cashflow response model.
 * @export
 * @interface TrancheCashflowResponse
 */
export interface TrancheCashflowResponse {
    /**
     * Year
     * @type {number}
     * @memberof TrancheCashflowResponse
     */
    year: number;
    /**
     * Month (if applicable)
     * @type {number}
     * @memberof TrancheCashflowResponse
     */
    month?: number;
    /**
     * Quarter (if applicable)
     * @type {number}
     * @memberof TrancheCashflowResponse
     */
    quarter?: number;
    /**
     * Principal payment
     * @type {number}
     * @memberof TrancheCashflowResponse
     */
    principalPayment: number;
    /**
     * Interest payment
     * @type {number}
     * @memberof TrancheCashflowResponse
     */
    interestPayment: number;
    /**
     * Profit share payment
     * @type {number}
     * @memberof TrancheCashflowResponse
     */
    profitSharePayment: number;
    /**
     * Total payment
     * @type {number}
     * @memberof TrancheCashflowResponse
     */
    totalPayment: number;
    /**
     * Remaining principal
     * @type {number}
     * @memberof TrancheCashflowResponse
     */
    remainingPrincipal: number;
}

/**
 * Check if a given object implements the TrancheCashflowResponse interface.
 */
export function instanceOfTrancheCashflowResponse(value: object): value is TrancheCashflowResponse {
    if (!('year' in value) || value['year'] === undefined) return false;
    if (!('principalPayment' in value) || value['principalPayment'] === undefined) return false;
    if (!('interestPayment' in value) || value['interestPayment'] === undefined) return false;
    if (!('profitSharePayment' in value) || value['profitSharePayment'] === undefined) return false;
    if (!('totalPayment' in value) || value['totalPayment'] === undefined) return false;
    if (!('remainingPrincipal' in value) || value['remainingPrincipal'] === undefined) return false;
    return true;
}

export function TrancheCashflowResponseFromJSON(json: any): TrancheCashflowResponse {
    return TrancheCashflowResponseFromJSONTyped(json, false);
}

export function TrancheCashflowResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrancheCashflowResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'year': json['year'],
        'month': json['month'] == null ? undefined : json['month'],
        'quarter': json['quarter'] == null ? undefined : json['quarter'],
        'principalPayment': json['principal_payment'],
        'interestPayment': json['interest_payment'],
        'profitSharePayment': json['profit_share_payment'],
        'totalPayment': json['total_payment'],
        'remainingPrincipal': json['remaining_principal'],
    };
}

export function TrancheCashflowResponseToJSON(json: any): TrancheCashflowResponse {
    return TrancheCashflowResponseToJSONTyped(json, false);
}

export function TrancheCashflowResponseToJSONTyped(value?: TrancheCashflowResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'year': value['year'],
        'month': value['month'],
        'quarter': value['quarter'],
        'principal_payment': value['principalPayment'],
        'interest_payment': value['interestPayment'],
        'profit_share_payment': value['profitSharePayment'],
        'total_payment': value['totalPayment'],
        'remaining_principal': value['remainingPrincipal'],
    };
}

