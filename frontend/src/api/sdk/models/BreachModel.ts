/* tslint:disable */
/* eslint-disable */
/**
 * EQU IHOME SIM ENGINE API
 * API for running home equity investment fund simulations
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: info@equihome.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Breach model.
 * 
 * Attributes:
 *     code: Breach code
 *     severity: Breach severity
 *     message: Breach message
 *     value: Actual value that triggered the breach
 *     threshold: Threshold value that was breached
 *     unit: Unit of measurement
 *     layer: Layer where the breach occurred (Unit, Zone, Portfolio, etc.)
 * @export
 * @interface BreachModel
 */
export interface BreachModel {
    /**
     * Breach code
     * @type {string}
     * @memberof BreachModel
     */
    code: string;
    /**
     * Breach severity (INFO, WARN, FAIL)
     * @type {string}
     * @memberof BreachModel
     */
    severity: string;
    /**
     * Breach message
     * @type {string}
     * @memberof BreachModel
     */
    message: string;
    /**
     * Actual value that triggered the breach
     * @type {number}
     * @memberof BreachModel
     */
    value?: number;
    /**
     * Threshold value that was breached
     * @type {number}
     * @memberof BreachModel
     */
    threshold?: number;
    /**
     * Unit of measurement
     * @type {string}
     * @memberof BreachModel
     */
    unit?: string;
    /**
     * Layer where the breach occurred (Unit, Zone, Portfolio, etc.)
     * @type {string}
     * @memberof BreachModel
     */
    layer?: string;
}

/**
 * Check if a given object implements the BreachModel interface.
 */
export function instanceOfBreachModel(value: object): value is BreachModel {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function BreachModelFromJSON(json: any): BreachModel {
    return BreachModelFromJSONTyped(json, false);
}

export function BreachModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): BreachModel {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'severity': json['severity'],
        'message': json['message'],
        'value': json['value'] == null ? undefined : json['value'],
        'threshold': json['threshold'] == null ? undefined : json['threshold'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'layer': json['layer'] == null ? undefined : json['layer'],
    };
}

export function BreachModelToJSON(json: any): BreachModel {
    return BreachModelToJSONTyped(json, false);
}

export function BreachModelToJSONTyped(value?: BreachModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'severity': value['severity'],
        'message': value['message'],
        'value': value['value'],
        'threshold': value['threshold'],
        'unit': value['unit'],
        'layer': value['layer'],
    };
}

